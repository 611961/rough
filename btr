#include <iostream>
#include <algorithm>
#include <queue>
using namespace std;

class node {
public:
    int data;
    node *left;
    node *right;

    node(int d) {
        this->data = d;
        this->left = nullptr;
        this->right = nullptr;
    }
};

node *maketree(node *root) {
    int data;
    cin >> data;

    if (data == -1) {
        return nullptr;
    }
    root = new node(data);
    cout << "enter left \n";
    root->left = maketree(root->left);

    cout << "enter right\n";
    root->right = maketree(root->right);
    return root;
}

void printlvl(node*root){
    queue<node*>q;
    q.push(root);
    while(!q.empty()){
    int s=q.size();
    for(int i=0;i<s;i++){
        node*c=q.front();
        q.pop();
        cout<<c->data<<" ";
        if(c->left){
            q.push(c->left);
        }
        if(c->right){
            q.push(c->right);
        }
    }
}
}

int main() {
    node *root = nullptr;
    root = maketree(root);
    printlvl(root);
    return 0;
}
